[{"/Users/wrg2996/hack/solid-kitchen/src/index.js":"1","/Users/wrg2996/hack/solid-kitchen/src/App.js":"2","/Users/wrg2996/hack/solid-kitchen/src/reportWebVitals.js":"3","/Users/wrg2996/hack/solid-kitchen/src/models/profile.js":"4","/Users/wrg2996/hack/solid-kitchen/src/components/styled.js":"5","/Users/wrg2996/hack/solid-kitchen/src/components/profile.js":"6","/Users/wrg2996/hack/solid-kitchen/src/util/pods.js":"7","/Users/wrg2996/hack/solid-kitchen/src/models/index.js":"8","/Users/wrg2996/hack/solid-kitchen/src/components/Profile.js":"9","/Users/wrg2996/hack/solid-kitchen/src/components/Dashboard.js":"10","/Users/wrg2996/hack/solid-kitchen/src/components/Recipes.js":"11","/Users/wrg2996/hack/solid-kitchen/src/components/Forms/RecipeForm.js":"12"},{"size":500,"mtime":1629314617862,"results":"13","hashOfConfig":"14"},{"size":1729,"mtime":1630098815336,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610485392621,"results":"16","hashOfConfig":"14"},{"size":681,"mtime":1629396032646,"results":"17","hashOfConfig":"14"},{"size":2214,"mtime":1630266828246,"results":"18","hashOfConfig":"14"},{"size":2720,"mtime":1630090920334,"results":"19","hashOfConfig":"14"},{"size":1299,"mtime":1629375397229,"results":"20","hashOfConfig":"14"},{"size":101,"mtime":1629320065046,"results":"21","hashOfConfig":"14"},{"size":2720,"mtime":1630090920334,"results":"22","hashOfConfig":"14"},{"size":638,"mtime":1630079859803,"results":"23","hashOfConfig":"14"},{"size":713,"mtime":1630090371685,"results":"24","hashOfConfig":"14"},{"size":3393,"mtime":1630336086259,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"utxqpw",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wrg2996/hack/solid-kitchen/src/index.js",[],["53","54"],"/Users/wrg2996/hack/solid-kitchen/src/App.js",[],"/Users/wrg2996/hack/solid-kitchen/src/reportWebVitals.js",[],"/Users/wrg2996/hack/solid-kitchen/src/models/profile.js",[],"/Users/wrg2996/hack/solid-kitchen/src/components/styled.js",[],"/Users/wrg2996/hack/solid-kitchen/src/components/profile.js",[],"/Users/wrg2996/hack/solid-kitchen/src/util/pods.js",[],"/Users/wrg2996/hack/solid-kitchen/src/models/index.js",[],"/Users/wrg2996/hack/solid-kitchen/src/components/Profile.js",["55"],"import { Button, IconButton, Input, InputAdornment } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BigBar, BigIconHeader, Column, Pane, Spacer } from \"./styled\";\n\n\nfunction Profile({ profile, onChange, submit }) {\n\n  const [edit, toggleEdit] = useState(false);\n\n  function update(field) {\n    return ({ target }) => {\n      onChange({ ...profile, [field]: target.value })\n    }\n  }\n\n  function updateName({ target }) {\n    let [firstName = '', lastName = ''] = target.value.split(' ');\n    onChange({ ...profile, firstName, lastName })\n  }\n\n  if (!profile) return <></>\n\n  return (\n    <>\n      <BigBar>\n        <BigIconHeader className=\"material-icons\">account_circle</BigIconHeader>\n        <Column justify=\"center\">\n          { !edit ?\n            <h2 style={ { margin: 0 } }>\n              { profile.firstName } { profile.lastName }\n              <span className=\"material-icons\" onClick={ () => toggleEdit(!edit) }>edit</span>\n            </h2>\n            : <Input\n              type=\"text\"\n              placeholder=\"name\"\n              defaultValue={ profile.firstName ? `${ profile.firstName } ${ profile.lastName }` : \"\" }\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={ () => toggleEdit(!edit) } color=\"inherit\">\n                    <span className=\"material-icons\">done</span>\n                  </IconButton>\n                </InputAdornment>\n              }\n              onChange={ updateName } />\n          }\n          <p>{ profile.nickname }</p>\n        </Column>\n        <Spacer />\n        <Column justify=\"flex-end\">\n          <Link to=\"/\">\n            <IconButton color=\"inherit\" size=\"large\">\n              <span className=\"material-icons large\">kitchen</span>\n            </IconButton>\n          </Link>\n        </Column>\n      </BigBar>\n      <Column align=\"center\">\n        <Input\n          type=\"text\"\n          placeholder=\"nickname\"\n          defaultValue={ profile.nickname || \"\" }\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <span className=\"material-icons\">account_circle</span>\n            </InputAdornment>\n          }\n          onChange={ update(\"nickname\") } />\n        <Input\n          type=\"text\"\n          placeholder=\"email\"\n          defaultValue={ profile.email || \"\" }\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <span className=\"material-icons\">email</span>\n            </InputAdornment>\n          }\n          onChange={ update(\"email\") } />\n        <Button onClick={ submit } color=\"primary\">update</Button>\n      </Column>\n    </>)\n}\n\nexport default Profile;","/Users/wrg2996/hack/solid-kitchen/src/components/Dashboard.js",[],"/Users/wrg2996/hack/solid-kitchen/src/components/Recipes.js",["56"],"import { Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport RecipeForm from \"./Forms/RecipeForm\";\nimport { Row, Spacer } from \"./styled\";\n\nfunction Recipes() {\n\n  const [cookbook, updateCookbook] = useState()\n  const [add, setAdd] = useState(false)\n\n  return (\n    <>\n      <Row justify=\"flex-start\" align=\"center\">\n        <Spacer />\n        { !cookbook && <h3>No recipes yet...</h3> }\n        <Spacer />\n        <Button variant=\"outlined\" onClick={ () => setAdd(!add) } color=\"primary\">\n          <span className=\"material-icons\">{ add ? 'close' : 'add' }</span>\n        </Button>\n      </Row>\n      {\n        add &&\n        <RecipeForm />\n      }\n    </>\n  )\n}\n\nexport default Recipes;","/Users/wrg2996/hack/solid-kitchen/src/components/Forms/RecipeForm.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":4,"column":41,"nodeType":"63","messageId":"64","endLine":4,"endColumn":45},{"ruleId":"61","severity":1,"message":"65","line":8,"column":20,"nodeType":"63","messageId":"64","endLine":8,"endColumn":34},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Pane' is defined but never used.","Identifier","unusedVar","'updateCookbook' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]